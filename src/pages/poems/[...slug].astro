---
import type { CollectionEntry } from "astro:content";
import PoemLayout from "../../layouts/PoemLayout.astro";
import { poemsStaticPaths } from "../../lib/dataAstro";

interface Props {
  poem: CollectionEntry<"poems">;
  entryList: {
    slug: string;
    data: any;
  }[];
}

export async function getStaticPaths() {
  return poemsStaticPaths;
}

const { poem } = Astro.props;
const { Content } = await poem.render();

const dateFormatOption = {
  day: "numeric",
  month: "long",
  year: "numeric",
} as const;
---

<PoemLayout
  showLoading={false}
  title={poem.data.title + " | A poem by xypnox"}
  meta={{
    description: `A poem by xypnox called ${poem.data.title}`,
    type: "poem",
  }}
>
  <div class="postHeading">
    <h1 class="headingFont">{poem.data.title}</h1>
    <p>by <a href="/">xypnox</a></p>
  </div>
  <div class="content-wrapper">
    <div class="poem-content">
      {
        poem.data.hidden && (
          <blockquote>
            <p>
              <strong> <span>ðŸ”’</span>
                This is a Hidden Poem</strong>
            </p>
            <p>If you have landed here, wow!</p>
            <p>
              This may also be a draft poem, [share feedback](/)!
            </p>
          </blockquote>
        )
      }
      <Content />
      <div class="details">
        <time datetime={poem.data.date.toISOString()}>
          {poem.data.date.toLocaleDateString("en-US", dateFormatOption)}
        </time>
      </div>
    </div>
  </div>
</Layout>

<style>
  .postHeading {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 0 auto;
    margin-bottom: 2rem;
  }

  .postHeading h1, .postHeading p {
    margin: 0;
  }

  .postHeading p,
  .postHeading p a {
    font-size: var(--font-size-md);
    color: var(--poems-fadeText);
    font-style: italic;
  }

  .postHeading h1 {
    font-size: var(--font-size-xxl);
    color: var(--poems-heading);
  }


  .content-wrapper {
    display: flex;
    flex-direction: row;
    gap: 2rem;
    width: 100%;
    margin: 0 auto;
  }

  .poem-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    margin: 0 auto;
    line-height: 1.5;
    font-family: var(--poems-fontFamily);
    font-size: calc((var(--font-size-md) + var(--font-size-base)) / 2 );
  }

  .poem-content :global(img) {
    max-width: 100%;
    margin: 0 auto;
    display: block;
  }

  .poem-content :global(hr) {
    border-color: var(--poems-border);
  }

  .poem-content :global(blockquote) {
    font-size: var(--font-size-base);
    margin: 4rem 0 2rem;
    padding: 0rem 1rem;
    background-color: var(--poems-surface);
    border-radius: 1rem;
  }

  .details {
    margin: 2rem 0;
    font-size: var(--font-size-base);
    color: var(--poems-fadeText);
    gap: 1rem;
    font-style: italic;
  }

  @media (max-width: 1200px) {
    .content-wrapper {
      flex-direction: column-reverse;
    }
  }

  @media (max-width: 390px) {
    .details {
      flex-wrap: wrap;
    }

    .separator {
      display: none;
    }
  }
</style>
