---
import Layout from "../layouts/MainLayout.astro";
import { Tooltip } from "../components/elements/tooltip";
import { icons } from "../components/icons";
import { Projects as projectsData } from "../content/projects";
import PageHeader from "../components/pageHeader.astro";
import { getImages } from "../utils/images";
import type { GetImageResult } from "astro";

const pathToProjectImage = (project: string, path: string) =>
  `/projects/${project}/${path}`;

const projectCoverImagesRaw = projectsData
  .filter((p) => p.cover)
  .map((p) => ({
    slug: p.slug,
    path: p.cover!.src,
  }));

let projectCoverImages: Record<string, GetImageResult> | undefined = undefined;

if (projectCoverImagesRaw && projectCoverImagesRaw.length > 0) {
  // We check if the asset images exist for the names defined in the data
  projectCoverImages = await getImages(
    projectCoverImagesRaw.map((i) => pathToProjectImage(i.slug, i.path)).flat(),
    [1200],
  );
}

export const frontMatter = {
  title: "Projects",
  description: "A collection of projects I've worked on.",
  // cover: projectCoverImages[0],
};
---

<Layout title="Projects" meta={frontMatter}>
  <PageHeader title="Projects" />
  <div class="projectGrid">
    {
      projectsData.map((p) => (
        <a
          id={p.slug}
          href={"/project/" + p.slug + "/"}
          class="projectCard theme-card"
        >
          {projectCoverImages && p.cover ? (
            <img
              width="400"
              height="200"
              class="cover-image"
              src={
                projectCoverImages[pathToProjectImage(p.slug, p.cover.src!)].src
              }
              srcset={
                projectCoverImages[pathToProjectImage(p.slug, p.cover.src!)]
                  .srcSet.attribute
              }
              alt={p.cover.alt || p.title}
            />
          ) : (
            <div />
          )}
          <div>
            <div class="cardContent">
              <img class="logoBlur" src={p.image} alt={p.title} />
              <img class="logo" src={p.image} alt={p.title} />
              <h2>
                {p.title}
                {p.award && (
                  <Tooltip
                    placement="top"
                    icon={icons.award}
                    id={`award-${p.slug}`}
                    client:load
                  >
                    <iconify-icon class="award-icon" icon={icons.award} />
                    <span class="award-tooltip" slot="tooltip">
                      {p.award}
                    </span>
                  </Tooltip>
                )}
              </h2>
              {p.description.map((d) => (
                <p>{d}</p>
              ))}
            </div>
          </div>
        </a>
      ))
    }
  </div>
</Layout>

<style>
  .projectGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
    gap: 1rem;
    @media (max-width: 768px) {
      grid-template-columns: 1fr;
    }
  }

  .projectCard {
    text-decoration: none;
    color: var(--text);
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 2rem;
    border-radius: calc(2 * var(--border-radius));
    width: 100%;
    line-height: 1.5;
    transition: all 0.5s ease-in-out;
    overflow: hidden;
  }

  .projectCard:hover {
    border-color: var(--primary-color);
    h2 {
      color: var(--primary-color);
    }
    .logo {
      transform: scale(1.05);
    }
    .logoBlur {
      transform: scale(1.1);
    }
    .cover-image {
      transform: scale(1.05);
    }
  }

  .cardContent {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    margin-top: calc(-70px - 1rem);
    padding: 0 2rem 2rem;
  }

  .projectCard .logo {
    width: 100%;
    max-width: 128px;
    margin-top: calc(-140px - 1rem);
    margin-bottom: 0.5rem;
    z-index: 4;
    border-radius: calc(2 * var(--border-radius));
    transition: all 0.5s ease-in-out;
  }

  .logoBlur {
    opacity: 0.5;
    width: 100%;
    max-width: 140px;
    z-index: 3;
    filter: blur(8px);
    margin-left: -8px;
    transition: all 0.5s ease-in-out;
  }

  .projectCard .cover-image {
    width: 100%;
    max-width: 100%;
    height: 200px;
    object-fit: cover;
    object-position: top;
    transition: all 0.5s ease-in-out;
    border-radius: calc(2 * var(--border-radius));
  }

  .projectCard p,
  .projectCard h2 {
    margin: 0;
  }
  .award-tooltip {
    max-width: 300px;
    text-align: left;
    font-weight: 400;
  }

  .cardContent h2 {
    display: flex;
    gap: 1rem;
    .award-icon {
      color: var(--secondary-color);
      font-size: var(--font-size-md);
    }
    :global(.wrapper) {
      display: flex;
      align-items: center;
    }
  }

  @media (max-width: 768px) {
    .projectCard {
      flex-direction: column;
      align-items: center;
    }
  }
</style>
